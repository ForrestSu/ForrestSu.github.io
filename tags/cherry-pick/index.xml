<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cherry-pick on 程序员的冷浪漫</title>
    <link>https://forrestsu.github.io/tags/cherry-pick/</link>
    <description>Recent content in cherry-pick on 程序员的冷浪漫</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 12 Sep 2016 01:10:00 +0800</lastBuildDate>
    
	<atom:link href="https://forrestsu.github.io/tags/cherry-pick/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>git-cherry-pick</title>
      <link>https://forrestsu.github.io/posts/git/git-cherry-pick/</link>
      <pubDate>Mon, 12 Sep 2016 01:10:00 +0800</pubDate>
      
      <guid>https://forrestsu.github.io/posts/git/git-cherry-pick/</guid>
      <description>1 cherry-pick 　git cherry-pick可以选择某一个分支中的一个或几个commit(s)来进行操作。 例如，假设我们有个稳定版本的分支，叫v2.0，另外还有个开发版本的分支v3.0，我们不能直接把两个分支合并，这样会导致稳定版本混乱，但是又想增加一个v3.0中的功能到v2.0中，这里就可以使用cherry-pick了。 如下图，比如我们想将master的C5修改记录，也提交到dev-feature这个分支上，我们可以使用： &amp;gt;git cherry-pick ee99d9a
如果没有修改文件的同一行则提交顺利。如果有冲突则需要手工解决。
2 冲突解决 如下图，我们进行cherry-pick发生了冲突。git 提示我们先手工修复，然后git add [patchs],最后git commit 即可。 通过git status 可以选择终止cherry-pick 或者继续。 解决完冲突后: 《完》</description>
    </item>
    
  </channel>
</rss>