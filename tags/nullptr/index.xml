<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nullptr on 程序员的冷浪漫</title>
    <link>https://forrestsu.github.io/tags/nullptr/</link>
    <description>Recent content in nullptr on 程序员的冷浪漫</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sun, 17 Jul 2016 01:11:00 +0800</lastBuildDate><atom:link href="https://forrestsu.github.io/tags/nullptr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43;关于NULL、0、nullptr</title>
      <link>https://forrestsu.github.io/posts/developerguide/cpp/about-null-0-nullptr/</link>
      <pubDate>Sun, 17 Jul 2016 01:11:00 +0800</pubDate>
      
      <guid>https://forrestsu.github.io/posts/developerguide/cpp/about-null-0-nullptr/</guid>
      <description>一 关于NULL、0、nullptr 1 在C语言中NULL被定义为：一个void* 指针，指向的地址为0。 1 #define NULL ((void *)0) 所以在C语言中我们通常会写出如下语句 1 2 int *i = NULL; foo_t *f = NULL; 2 而在C++中，NULL会被定义为0 1 2 3 4 5 #ifndef __cplusplus #define NULL ((void *)0) #else /* C++ */ #define NULL 0 #endif 3 C++11引入了nullptr 来表示空指针 二 在C++中使用NULL的风险 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 //func1 int mycall(char *a, char *b) { cout&amp;lt;&amp;lt;&amp;#34;char pointer!&amp;#34;&amp;lt;&amp;lt;endl; } //func2 int mycall(char *a, int b) { cout&amp;lt;&amp;lt;&amp;#34;int !&amp;#34;&amp;lt;&amp;lt;endl; } // func3 int mycall(char *a,nullptr_t nullp) { cout&amp;lt;&amp;lt;&amp;#34;nullptr !&amp;#34;&amp;lt;&amp;lt;endl; } int main() { char *a,*b; mycall(a,b); //char pointer! //优先调用func2，没有func2则调用func1或fu</description>
    </item>
    
  </channel>
</rss>
