<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>流量录制回放 on 程序员的冷浪漫</title>
    <link>https://forrestsu.github.io/tags/%E6%B5%81%E9%87%8F%E5%BD%95%E5%88%B6%E5%9B%9E%E6%94%BE/</link>
    <description>Recent content in 流量录制回放 on 程序员的冷浪漫</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Fri, 09 Dec 2022 19:07:00 +0800</lastBuildDate><atom:link href="https://forrestsu.github.io/tags/%E6%B5%81%E9%87%8F%E5%BD%95%E5%88%B6%E5%9B%9E%E6%94%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LogReplay 流量录制回放设计与实现</title>
      <link>https://forrestsu.github.io/posts/developerguide/design/log-replay/</link>
      <pubDate>Fri, 09 Dec 2022 19:07:00 +0800</pubDate>
      
      <guid>https://forrestsu.github.io/posts/developerguide/design/log-replay/</guid>
      <description>1 前言 基于拦截器，实现一个基于 trpc 协议的流量录制、回放插件。 支持回放流量验证。 常用场景： 服务重构后的流量验证，差异检测 日常需求迭代，回放验证(上线前) 2 整体方案 实现两组拦截器：录制拦截器、回放拦截器 录制拦截器：负责记录服务接口+所有下游调用数据（req、rsp、err），序列化后上报，用于回放。 回放拦截器：负责下游调用的mock（不实际发起调用），服务接口的回包上报，用于diff。 回包 diff 能力：由 LogReplay 平台提供，拦截器插件只负责上报diff所需数据。 补充一点，如何保存切面数据？ 方案一： 基于trpc包头 metadata</description>
    </item>
    
  </channel>
</rss>
