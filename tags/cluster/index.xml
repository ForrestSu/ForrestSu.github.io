<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cluster on 程序员的冷浪漫</title>
    <link>https://forrestsu.github.io/tags/cluster/</link>
    <description>Recent content in cluster on 程序员的冷浪漫</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 30 Oct 2018 19:50:19 +0800</lastBuildDate>
    
	<atom:link href="https://forrestsu.github.io/tags/cluster/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Zookeeper&#43;Kafka集群搭建方案</title>
      <link>https://forrestsu.github.io/posts/highavailable/zookeeper-kafka-cluster-deployment-plan/</link>
      <pubDate>Tue, 30 Oct 2018 19:50:19 +0800</pubDate>
      
      <guid>https://forrestsu.github.io/posts/highavailable/zookeeper-kafka-cluster-deployment-plan/</guid>
      <description>Preface Zookeeper是一个高性能分布式应用协调服务 - Naming Service - 配置管理 - Leader Election - 服务发现 - 同步 - Group Service - Barrier - 分布式队列(其实zookeeper并不适合作为分布式队列，性能不高只不过在特定场合可以) - 两阶段提交
Zookeeper工作方式
 Zookeeper集群包含一个1个Leader，多个Follower 所有的Follower都可提供读服务 所有的写操作都会被forward到Leader Client与Server通过NIO通信 全局串行化所有的写操作 保证同一客户端的指令被FIFO执行 保证消息通知的FIFO  与Kafka读写操作不一样，Kafka只有Leader提供读写操作。</description>
    </item>
    
  </channel>
</rss>