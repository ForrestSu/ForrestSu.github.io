<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eureka on 程序员的冷浪漫</title>
    <link>https://forrestsu.github.io/tags/eureka/</link>
    <description>Recent content in Eureka on 程序员的冷浪漫</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 25 May 2020 17:28:06 +0800</lastBuildDate>
    
	<atom:link href="https://forrestsu.github.io/tags/eureka/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Eureka 服务注册与发现-原理分析</title>
      <link>https://forrestsu.github.io/posts/architecture-thinking/spring-eureka-registry/</link>
      <pubDate>Mon, 25 May 2020 17:28:06 +0800</pubDate>
      
      <guid>https://forrestsu.github.io/posts/architecture-thinking/spring-eureka-registry/</guid>
      <description>&lt;h2 id=&#34;1-preface&#34;&gt;1 Preface&lt;/h2&gt;
&lt;p&gt;Eureka 是Netflix开发的服务发现框架，本身是一个基于REST的服务。&lt;br&gt;
SpringCloud将它集成在其子项目spring-cloud-netflix中，以实现SpringCloud的服务注册与发现功能。&lt;/p&gt;
&lt;p&gt;在 Spring 全家桶中, Eureka 是一个微服务注册中心，主要提供服务的注册与发现，另一个功能就是服务配置获取。&lt;/p&gt;
&lt;h2 id=&#34;2-eureka-核心概念&#34;&gt;2 Eureka 核心概念&lt;/h2&gt;
&lt;p&gt;Eureka 作为 Spring Cloud 体系中核心、默认的注册中心组件，研究它的运行机制，有助于我们在工作中更好地使用它。&lt;/p&gt;
&lt;p&gt;下图: 服务注册+调用示意图， 服务提供者和服务的消费者，本质上也是 Eureka Client 角色。&lt;br&gt;
整体上可以分为两个主体：&lt;code&gt;Eureka Server&lt;/code&gt; 和 &lt;code&gt;Eureka Client&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;
        &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://forrestsu.github.io/images/spring/eureka-server.png&#34;&gt;
            &lt;img class=&#34;mx-auto&#34; alt=&#34;Eureka&#34; src=&#34;https://forrestsu.github.io/images/spring/eureka-server.png&#34; /&gt;
        &lt;/a&gt;
    &lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>