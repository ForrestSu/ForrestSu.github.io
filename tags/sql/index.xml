<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sql on 程序员的冷浪漫</title>
    <link>https://forrestsu.github.io/tags/sql/</link>
    <description>Recent content in sql on 程序员的冷浪漫</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Wed, 15 Sep 2021 16:50:12 +0800</lastBuildDate><atom:link href="https://forrestsu.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何实现 SQL 用户标签的查询？</title>
      <link>https://forrestsu.github.io/posts/database/sql-user-tags/</link>
      <pubDate>Wed, 15 Sep 2021 16:50:12 +0800</pubDate>
      
      <guid>https://forrestsu.github.io/posts/database/sql-user-tags/</guid>
      <description>&lt;h2 id=&#34;1-preface&#34;&gt;1 Preface&lt;/h2&gt;
&lt;p&gt;在社交 APP 中，经常会看到用户标签功能，那么这个功能如何实现呢？ 如微信的用户标签。&lt;/p&gt;
&lt;p&gt;
        &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://forrestsu.github.io/images/db/user-label.png&#34;&gt;
            &lt;img class=&#34;mx-auto&#34; alt=&#34;user-label&#34; src=&#34;https://forrestsu.github.io/images/db/user-label.png&#34; /&gt;
        &lt;/a&gt;
    &lt;/p&gt;
&lt;p&gt;考虑两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;标签的量级较大，我们需要基于 ES 来加速查询;&lt;/li&gt;
&lt;li&gt;标签量级较小，可以使用数据库实现一个简易版的标签功能；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面我们使用数据库，实现一个简易的标签功能；&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL: 一条SQL语句是如何执行的？</title>
      <link>https://forrestsu.github.io/posts/cs/how-is-a-sql-statement-executed-by-mysql/</link>
      <pubDate>Fri, 11 Oct 2019 20:12:34 +0800</pubDate>
      
      <guid>https://forrestsu.github.io/posts/cs/how-is-a-sql-statement-executed-by-mysql/</guid>
      <description>1 MySQL 基本架构 MySQL基本架构示意图 2 日志系统 与查询流程不一样的是，更新流程还涉及两个重要的日志模块，它们正是我们要讨论 的主角：redo log（重做日志）和 binlog（归档日志）。 如果接触 MySQL，那这两个词肯定是绕不过的，我后面的内容里也会不断地和你强调。 不过话说回来，redo log 和 binlog 在设计上有很多有意思的地方，这些设计思路也可以用到你自己的程序里。 2.1 重要的日志模块：redo log</description>
    </item>
    
  </channel>
</rss>
